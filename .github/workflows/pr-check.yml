name: PR Check

on:
  pull_request:
    branches: [ master ]
    paths:
      - 'services/**'
      - '.github/workflows/**'

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      line-bot: ${{ steps.changes.outputs.line-bot }}
      admin-panel: ${{ steps.changes.outputs.admin-panel }}
      image-processor: ${{ steps.changes.outputs.image-processor }}

    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            line-bot:
              - 'services/line-bot/**'
            admin-panel:
              - 'services/admin-panel/**'
            image-processor:
              - 'services/image-processor/**'

  lint-and-format:
    needs: detect-changes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [line-bot, admin-panel, image-processor]

    steps:
      - name: Check if service changed
        id: check-changes
        run: |
          case "${{ matrix.service }}" in
            line-bot)
              echo "changed=${{ needs.detect-changes.outputs.line-bot }}" >> $GITHUB_OUTPUT
              ;;
            admin-panel)
              echo "changed=${{ needs.detect-changes.outputs.admin-panel }}" >> $GITHUB_OUTPUT
              ;;
            image-processor)
              echo "changed=${{ needs.detect-changes.outputs.image-processor }}" >> $GITHUB_OUTPUT
              ;;
          esac

      - name: Checkout code
        if: steps.check-changes.outputs.changed == 'true'
        uses: actions/checkout@v4

      - name: Setup Node.js
        if: steps.check-changes.outputs.changed == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'
          cache-dependency-path: 'services/${{ matrix.service }}/yarn.lock'

      - name: Install dependencies
        if: steps.check-changes.outputs.changed == 'true'
        working-directory: services/${{ matrix.service }}
        run: yarn install --frozen-lockfile

      - name: Setup Biome config (for line-bot and image-processor)
        if: steps.check-changes.outputs.changed == 'true' && (matrix.service == 'line-bot' || matrix.service == 'image-processor')
        working-directory: services/${{ matrix.service }}
        run: |
          cat > biome.json << 'EOF'
          {
            "$schema": "https://biomejs.dev/schemas/1.8.3/schema.json",
            "organizeImports": {
              "enabled": true
            },
            "linter": {
              "enabled": true,
              "rules": {
                "recommended": true,
                "suspicious": {
                  "noImplicitAnyLet": "warn",
                  "noExplicitAny": "warn"
                },
                "complexity": {
                  "noForEach": "off"
                }
              }
            },
            "javascript": {
              "formatter": {
                "quoteStyle": "single",
                "semicolons": "always",
                "trailingCommas": "none",
                "indentStyle": "space",
                "indentWidth": 2,
                "lineWidth": 120
              }
            }
          }
          EOF

      - name: Run Biome lint
        if: steps.check-changes.outputs.changed == 'true'
        working-directory: services/${{ matrix.service }}
        run: npx @biomejs/biome lint ./src

      - name: Run Biome format check
        if: steps.check-changes.outputs.changed == 'true'
        working-directory: services/${{ matrix.service }}
        run: npx @biomejs/biome format --check ./src

  docker-build:
    needs: detect-changes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [line-bot, admin-panel, image-processor]
    steps:
      - name: Check if service changed
        id: check-changes
        run: |
          case "${{ matrix.service }}" in
            line-bot)
              echo "changed=${{ needs.detect-changes.outputs.line-bot }}" >> $GITHUB_OUTPUT
              ;;
            admin-panel)
              echo "changed=${{ needs.detect-changes.outputs.admin-panel }}" >> $GITHUB_OUTPUT
              ;;

            image-processor)
              echo "changed=${{ needs.detect-changes.outputs.image-processor }}" >> $GITHUB_OUTPUT
              ;;
          esac

      - name: Checkout code
        if: steps.check-changes.outputs.changed == 'true'
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        if: steps.check-changes.outputs.changed == 'true'
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        if: steps.check-changes.outputs.changed == 'true'
        working-directory: services/${{ matrix.service }}
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          build-args: |
            VITE_API_URL=${{ secrets.VITE_API_URL }}
          cache-from: type:=gha
          cache-to: type=gha
